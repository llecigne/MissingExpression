var Behaviour = function() 
{
    var applyElement = function(element)
    {
	for (var i = 0, selector; selector = Behaviour.rules[i]; i++)
	    if (selector.match(element)) selector.rules(element);
    };
    return {
	rules: [],
	version: '0.1',
	register: function(rules)
	{
	    for (cssExpression in rules)
		CssSelector.build(cssExpression).each(function (selector) {
			selector.rules = rules[cssExpression];
			Behaviour.rules.push(selector);
		    });
	    Behaviour.rules.sort(CssSelector.comparator);
	},
	apply: function(from)
	{
	    if (!from) from = document.body;
	    document.visit(from, applyElement);
	}
    }
} ();
var bootstrap = function() { Behaviour.apply() };
window.onload = (window.onload instanceof Function) ?
    window.onload.applyAfter(bootstrap) : bootstrap;
