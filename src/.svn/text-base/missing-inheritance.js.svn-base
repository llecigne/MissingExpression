//------------------------------------------------------------------------------
//--- Javascript inheritance extension -----------------------------------------
//------------------------------------------------------------------------------
Object.extend = function(object, extension)
{
    for (var member in extension)
    {
        var objectImpl = object[member];
	if (objectImpl)
	{
	    var extensionImpl = extension[member];
	    object[member] = ((objectImpl instanceof Function) 
			      && (extensionImpl instanceof Function)) ? 
		objectImpl.applyAround(extensionImpl) :
		extensionImpl;
	}
	else
	{
	    object[member] = extension[member];
	}
    }
    return object;
}

Function.prototype.extend = function(ancestor, prototype)
{
    if (prototype)
	this.prototype = prototype;
    else
	prototype = this.prototype;
    if (ancestor instanceof Function)
	ancestor = ancestor.prototype;
    for (var member in ancestor)
    {
	var prototypeImpl = prototype[member];
	var ancestorImpl = ancestor[member];
        if (prototypeImpl)
	{
	    if ((prototypeImpl instanceof Function)
		&& (ancestorImpl instanceof Function))
	    {
		prototype[member] = ancestorImpl.applyAround(prototypeImpl);
	    }
	}
	else
	{
	    prototype[member] = ancestorImpl;
	}
    }
    return this;
}
